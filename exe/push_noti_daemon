#!/usr/bin/env ruby

require 'bundler/setup'
require 'yaml'
require 'socket'
require 'optparse'

require 'apns/persistent'

def ready(port)
  puts "\e[32mReady! port=#{port}\e[0m"
end

params = Hash[ARGV.getopts('', 'help', 'port:', 'pemfile:', 'passphrase:', 'sandbox').map { |k, v| [k.to_sym, v] }]

if params[:help]
  puts 'Usage: push_daemon [--port port] --pemfile path [--passphrase string] [--sandbox]'
  exit
end

unless params[:pemfile]
  puts 'Missing filename (" --help" for help)'
  exit
end
unless File.file?(params[:pemfile])
  puts "#{params[:pemfile]}: No such file or directory"
  exit
end

port = params[:port] || 20000

client = Apns::Persistent::PushClient.new(certificate: params[:pemfile], passphrase: params[:passphrase], sandbox: params[:sandbox])
client.open
thread = client.register_error_handle do |command, status, id|
  puts "\e[31mSend Error! command:#{command} status:#{status} id:#{id}\e[0m"
  ready(port)
end

gate = TCPServer.open port

begin
  loop do
    ready(port)
    sock = gate.accept

    length = sock.read(4).unpack('I')[0]
    data = YAML.load(sock.read(length))

    client.push(data)
    puts "Sent! id:#{data[:id] || 0}"
    sock.write("OK\n")
    sock.close
  end
rescue Interrupt
  client.close
  gate.close
end
